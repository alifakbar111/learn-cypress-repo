{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "testsRegistered": 6,
    "passPercent": 83.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-05-21T15:36:23.098Z",
    "end": "2023-05-21T15:37:33.073Z",
    "duration": 69975
  },
  "results": [
    {
      "uuid": "2d3bd555-5b4b-463f-91f2-0e4a9de93bea",
      "title": "",
      "fullFile": "cypress/e2e/secondTest.cy.ts",
      "file": "cypress/e2e/secondTest.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "71d781be-fdf2-4193-a610-23b76be08629",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify use can log out successfully",
              "fullTitle": "Test log out verify use can log out successfully",
              "timedOut": null,
              "duration": 6625,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"Settings\").click();\ncy.contains(\"Or click here to logout\").click();\ncy.get(\".navbar-nav\").should(\"contain\", \"Sign up1\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<ul.nav.navbar-nav.pull-xs-right>' to contain 'Sign up1'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<ul.nav.navbar-nav.pull-xs-right>' to contain 'Sign up1'\n    at Context.eval (webpack:///./cypress/e2e/secondTest.cy.ts:9:26)",
                "diff": null
              },
              "uuid": "f6889ecd-f078-49d8-9152-f1107628d012",
              "parentUUID": "71d781be-fdf2-4193-a610-23b76be08629",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f6889ecd-f078-49d8-9152-f1107628d012"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6625,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "41a8623b-3222-4b2e-8f4e-e5b7b98f3e62",
      "title": "",
      "fullFile": "cypress/e2e/firstTest.cy.ts",
      "file": "cypress/e2e/firstTest.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7882c7f7-c397-43a2-98d8-885be36eb7a8",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 5688,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomNumber = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\ncy.intercept(\"POST\", `${Cypress.env(\"apiUrl\")}/api/articles/`).as(\"postArticles\");\ncy.contains(\"New Article\").click();\ncy.get('input[formcontrolname=\"title\"]').type(`this is the title-${randomNumber}`);\ncy.get('input[formcontrolname=\"description\"]').type(\"this is a description\");\ncy.get('textarea[formcontrolname=\"body\"]').type(\"this is a body of the article\");\ncy.get(\"button\").contains(\"Publish Article\").click();\ncy.wait(\"@postArticles\");\ncy.get(\"@postArticles\").then((xhr) => {\n    expect(xhr.response.statusCode).to.equal(200);\n    expect(xhr.response.body.article.body).to.equal(\"this is a body of the article\");\n    expect(xhr.response.body.article.description).to.equal(\"this is a description\");\n});",
              "err": {},
              "uuid": "9febde55-abb3-4143-970f-6c1088c22e5d",
              "parentUUID": "7882c7f7-c397-43a2-98d8-885be36eb7a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and response",
              "fullTitle": "Test with backend intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 3697,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomNumber = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;\n// cy.intercept(\"POST\", \"https://api.realworld.io/api/articles/\", (req) => {\n//   req.body.article.description = \"this is a description 2\";\n// }).as(\"postArticles\");\ncy.intercept(\"POST\", `${Cypress.env(\"apiUrl\")}/api/articles/`, (req) => {\n    req.reply((res) => {\n        expect(res.body.article.description).to.equal(\"this is a description\");\n        res.body.article.description = \"this is a description 2\";\n    });\n}).as(\"postArticles\");\ncy.contains(\"New Article\").click();\ncy.get('input[formcontrolname=\"title\"]').type(`this is the title-${randomNumber}`);\ncy.get('input[formcontrolname=\"description\"]').type(\"this is a description\");\ncy.get('textarea[formcontrolname=\"body\"]').type(\"this is a body of the article\");\ncy.get(\"button\").contains(\"Publish Article\").click();\ncy.wait(\"@postArticles\");\ncy.get(\"@postArticles\").then((xhr) => {\n    expect(xhr.response.statusCode).to.equal(200);\n    expect(xhr.response.body.article.body).to.equal(\"this is a body of the article\");\n    expect(xhr.response.body.article.description).to.equal(\"this is a description 2\");\n});",
              "err": {},
              "uuid": "52e97c97-7cee-4d14-8bf4-031b4cfdfb08",
              "parentUUID": "7882c7f7-c397-43a2-98d8-885be36eb7a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify popular tags are displayed",
              "fullTitle": "Test with backend verify popular tags are displayed",
              "timedOut": null,
              "duration": 2290,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".tag-list\")\n    .should(\"contain\", \"cypress\")\n    .and(\"contain\", \"automation\")\n    .and(\"contain\", \"testing\");",
              "err": {},
              "uuid": "d322856b-6106-48ea-9c70-43cac908c821",
              "parentUUID": "7882c7f7-c397-43a2-98d8-885be36eb7a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed like count",
              "fullTitle": "Test with backend verify global feed like count",
              "timedOut": null,
              "duration": 7401,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept(\"GET\", `${Cypress.env(\"apiUrl\")}/api/articles/feed*`, {\n    articles: [],\n    articlesCount: 0,\n});\ncy.intercept(\"GET\", `${Cypress.env(\"apiUrl\")}/api/articles*`, {\n    fixture: \"articles.json\",\n}).as(\"getGlobalFeed\");\ncy.contains(\"Global Feed\").click();\ncy.wait(\"@getGlobalFeed\", {\n    timeout: 5000,\n});\ncy.get(\"app-article-list button\").then((heartList) => {\n    cy.wait(5000);\n    expect(heartList[0]).to.contain(\"1\");\n    expect(heartList[1]).to.contain(\"5\");\n});\ncy.fixture(\"articles.json\").then((file) => {\n    const articleLink = file.articles[1].slug;\n    file.articles[1].favoritesCount = 6;\n    cy.intercept(\"POST\", `${Cypress.env(\"apiUrl\")}/api/articles/${articleLink}/favorite`, file);\n    cy.get(\"app-article-list button\").eq(1).click().should(\"contain\", \"6\");\n});",
              "err": {},
              "uuid": "7baa2bdb-de60-4f5b-9ceb-7e4f329e83ab",
              "parentUUID": "7882c7f7-c397-43a2-98d8-885be36eb7a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete new article in a global feed",
              "fullTitle": "Test with backend delete new article in a global feed",
              "timedOut": null,
              "duration": 16925,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n    article: {\n        tagList: [],\n        title: \"Request from the API easy\",\n        description: \"API testing is easy\",\n        body: \"Angular is cool\",\n    },\n};\ncy.get(\"@token\").then((token) => {\n    cy.wait(10000);\n    cy.request({\n        method: \"POST\",\n        url: `${Cypress.env(\"apiUrl\")}/api/articles/`,\n        headers: { Authorization: `Token ${token}` },\n        body: bodyRequest,\n    }).then((resp) => {\n        expect(resp.status).to.equal(200);\n    });\n    cy.contains(\"Global Feed\").click();\n    cy.get(\".article-preview\").first().click();\n    cy.get(\".article-actions\").contains(\"Delete Article\").click();\n    cy.contains(\"Global Feed\").click();\n    cy.request({\n        method: \"GET\",\n        url: `${Cypress.env(\"apiUrl\")}/api/articles?limit=10&offset=0`,\n        headers: { Authorization: `Token ${token}` },\n    })\n        .its(\"body\")\n        .then((body) => {\n        expect(body.articles[0].title).not.to.equal(\"Request from the API easy\");\n    });\n});",
              "err": {},
              "uuid": "066b4099-cedc-44b3-8d40-991a6dfdbef4",
              "parentUUID": "7882c7f7-c397-43a2-98d8-885be36eb7a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9febde55-abb3-4143-970f-6c1088c22e5d",
            "52e97c97-7cee-4d14-8bf4-031b4cfdfb08",
            "d322856b-6106-48ea-9c70-43cac908c821",
            "7baa2bdb-de60-4f5b-9ceb-7e4f329e83ab",
            "066b4099-cedc-44b3-8d40-991a6dfdbef4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 36001,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}